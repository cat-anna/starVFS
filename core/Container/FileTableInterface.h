/*
  * Generated by cppsrc.sh
  * On 2015-12-22 21:08:18,29
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef FileTableInterface_H
#define FileTableInterface_H

namespace StarVFS {
namespace Containers {

class FileTableInterface final {
public:
 	FileTableInterface(FileTable *Owner, ContainerID cid);
 	~FileTableInterface();

	bool EnsureReserve(FileID count);

	FileID FindFile(const String& InternalFullPath);
	FileID FindFile(FilePathHash PathHash);

	FileID AllocFileID(const String& InternalFullPath);
	FileID AllocFileID(FileID Parent, FilePathHash PathHash, const CString FileName);

	bool CreateFile(FileID fid, FileID cfid, FileSize Size);
	bool CreateDirectory(FileID fid, FileID cfid);
	//bool CreateLink()
	//bool DeleteFile()

	bool IsFileValid(FileID fid) const { return m_Owner->IsValid(fid); }
	bool IsDirectory(FileID fid) const { return false; }// return m_Owner->IsValid(fid); }
	bool IsFile(FileID fid) const { return false; }// return m_Owner->IsValid(fid); }

	const CString GetFileName(FileID fid) const { return m_Owner->GetFileName(fid); }
	String GetFileFullPath(FileID fid) const { return m_Owner->GetFileFullPath(fid); }

	ContainerID GetContainerID() const { return m_CID; }
	FileTable* GetFileTable() { return m_Owner; }
private: 
	FileTable *m_Owner;
	FileID m_MountPoint;
	ContainerID m_CID;
};

} //namespace Containers 
} //namespace StarVFS 

#endif
