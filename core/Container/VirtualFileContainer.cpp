/*
  * Generated by cppsrc.sh
  * On 2015-12-27 21:51:19,30
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include "iContainer.h"
#include "VirtualFileContainer.h"

namespace StarVFS {
namespace Containers {

VirtualFileContainer::VirtualFileContainer(FileTableInterface *fti):
		iContainer(fti), m_InternalIDCounter(0) {
	m_InternalIDCounter = 1;
	m_Files.emplace_back(); //0 is not valid id allways

}

VirtualFileContainer::~VirtualFileContainer() {
}

//-------------------------------------------------------------------------------------------------

bool VirtualFileContainer::GetFileData(FileID ContainerFID, CharTable &out, FileSize *DataSize) const {
	return false;
}

//-------------------------------------------------------------------------------------------------

FileID VirtualFileContainer::GetFileCount() const {
	return static_cast<FileID>(m_Files.size() - 1);//dont count invalid id 0
}

bool VirtualFileContainer::ReloadContainer() {
	return true;
}

bool VirtualFileContainer::RegisterContent() const {
	return true;
}

} //namespace Containers 
} //namespace StarVFS 
