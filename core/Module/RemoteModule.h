/*
  * Generated by cppsrc.sh
  * On 2015-12-12  9:44:59,49
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/

#pragma once
#ifndef RemoteModule_H
#define RemoteModule_H

namespace StarVFS {
namespace Modules {

class RemoteModule : public iModule {
public:
	RemoteModule(StarVFS *svfs, const String &port = "");
 	virtual ~RemoteModule();

	virtual std::unique_ptr<AttributeMapInstance> GetAttributeMapInstance() const { 
		auto atm = CreateAttributeMapInstance<RemoteModule>();
		atm->AddAttrib("Port", &RemoteModule::GetPort, &RemoteModule::SetPort);
		return atm;
	}

	void SetPort(const String& port) { m_Port = port; }
	const String& GetPort() const { return m_Port; }
private:
	volatile bool m_CanRun, m_ThreadRunning;
	String m_Port;
	void ThreadMain();
	struct Connection;
};

} //namespace Modules 
} //namespace StarVFS 

#endif
